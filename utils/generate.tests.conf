{
   "examples":{
      "string":"some string",
      "PlayerPosition":"G",
      "number":1,
      "boolean":true,
      "Date":1622198987,
      "timestamp":1622198987,
      "string[]":[
         "some string",
         "some string 2",
         "some string 3",
         "some string 4"
      ],
      "TeamDivision":"SOUTHWEST",
      "TeamConference":"WEST",
      "User":{
         "id":1
      },
      "AuthCredentialsDto":{
         "username":"user",
         "password":"pass"
      },
      "CreateThreePointsContestDto":{
         "team1_players":[
            "some string",
            "some string 2"
         ],
         "team2_players":[
            "some string 3",
            "some string 4"
         ],
         "roundLength":3,
         "computerLevel":"Real Life",
         "computer_players":[

         ],
         "random_players":[

         ],
         "winner_name":"some string",
         "leaderboard":{
            "1":"some string",
            "2":"some string 4",
            "3":"some string 2",
            "4":"some string 3"
         },
         "scoresHistory":{
            "some string":[
               2,
               3,
               1,
               0,
               2
            ],
            "some string 2":[
               1,
               0
            ],
            "some string 3":[
               0
            ],
            "some string 4":[
               2,
               0,
               1,
               0
            ]
         }
      },
      "ListThreePointsContestDto":{
      },
      "ListUserDto": {
      },
      "TournamentGame[]":[
         {
            "player1":"some string",
            "player2":"some string 2",
            "score1":11,
            "score2":12,
            "mvp_player":"Jordan Poole",
            "is_comeback":true,
            "total_overtimes":2,
            "diff":1,
            "winner":"some string"
         },
         {
            "player1":"some string 4",
            "player2":"some string 3",
            "score1":1,
            "score2":13,
            "is_comeback":false,
            "total_overtimes":2,
            "diff":12,
            "winner":"some string 3"
         }
      ],
      "SpaceJamOneOnOne[]":[
       {
          "id": 1,
          "userId": 1,
          "score1": 0,
          "score2": 8,
          "addedAt": "2022-01-01T18:22:11.425Z",
          "is_comeback": false,
          "total_overtimes": 0,
          "player1_name": "some player",
          "player2_name": "some player2"
       },
       {
          "id": 2,
          "userId": 1,
          "score1": 0,
          "score2": 8,
          "addedAt": "2022-01-01T18:22:11.425Z",
          "is_comeback": false,
          "total_overtimes": 0,
          "player1_name": "some player",
          "player2_name": "some player2"
       }
    ]
   },
   "mocks": {
        "espnService.getInjuredPlayers": "[${mock_response_name}.mockInjuredPlayer]",

        "playerService.getPlayerByName": "${mock_response_name}.mockPlayer",
        "playerService.getPlayer": "${mock_response_name}.mockPlayer",
        "playerRepository.getPlayer": "${mock_response_name}.mockPlayer",
        "playerRepository.getPlayerByName": "${mock_response_name}.mockPlayer",
        "playerRepository._getPlayerByName": "${mock_response_name}.mockPlayer",
        "playerRepository.inActivePlayer": "${mock_response_name}.mockPlayer",
        "playerService.inActivePlayer": "${mock_response_name}.mockPlayer",
        "playerRepository.updatePlayer": "${mock_response_name}.mockPlayer",
        "playerRepository.createPlayer": "${mock_response_name}.mockPlayer",
        "playerRepository.upsertPlayer": "${mock_response_name}.mockPlayer",
        "playerService.getPlayerByNameFull": "${mock_response_name}.mockPlayer",

        "syncService.get3PointShooters": "[${mock_response_name}.mockPlayer]",
        "playerService.getPlayers": "[${mock_response_name}.mockPlayer]",
        "syncService.getPlayers": "[${mock_response_name}.mockPlayer]",
        "playerRepository.getPlayers": "[${mock_response_name}.mockPlayer]",

        "syncService.getPlayerRealStats": "${mock_response_name}.mockPlayerDetails",

        "playerDetailsRepository.getPlayersDetails": "[${mock_response_name}.mockPlayerDetails]",
        "syncService.getPopularPlayersRealStats": "[${mock_response_name}.mockPlayerDetails]",

        "oneOnOneRepository.listRecords": "[${mock_response_name}.mock2PlayersRecord]",

        "randomRepository.findOne": "${mock_response_name}.mock2TeamsRecord",
        "randomRepository.updateRecord": "${mock_response_name}.mock2TeamsRecord",
        "randomRepository.createRecord": "${mock_response_name}.mock2TeamsRecord",
        "randomRepository.listRecords": "[${mock_response_name}.mock2TeamsRecord]",
        "randomRepository.listRecordsByDate": "[${mock_response_name}.mock2TeamsRecord]",

        "stopwatchRepository.listRecords": "[${mock_response_name}.mockStopwatchRecord]",
        "threePointsContestRepository.listRecords": "[${mock_response_name}.mockThreePointsRecord]",

        "teamService.getTeamByName": "${mock_response_name}.mockTeam",
        "teamRepository.findOne": "${mock_response_name}.mockTeam",
        "teamRepository._getTeamByName": "${mock_response_name}.mockTeam",
        "teamService.getTeam": "${mock_response_name}.mockTeam",

        "teamRepository.getTeams": "[${mock_response_name}.mockTeam]",
        "syncService.getTeams": "[${mock_response_name}.mockTeam]",

        "spaceJamRepository.listRecords": "[${mock_response_name}.mockSpaceJamRecord]",

        "byClass":{
            "PlayerService": {
                "mockService.getPlayer": "${mock_response_name}.mockPlayer"
            },
            "TeamService": {
                "mockService.getTeam": "${mock_response_name}.mockTeam"
            },
            "PlayerDetailsService": {
                "mockService.getPlayersDetails": "[${mock_response_name}.mockPlayerDetails]"
            }
        }
   },
   "not_exist_mock_null":[
        "getPlayer",
        "getTeam"
   ]
}
